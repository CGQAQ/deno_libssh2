name: ci

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.kind }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Install Deno
        uses: denoland/setup-deno@v1

      - name: Run deno fmt
        run: deno fmt --check

      - name: Run deno lint
        run: deno lint

      - name: Run deno test
        if: matrix.os == 'macOS-latest'
        run: |
          brew install libssh2
          deno test --allow-ffi --unstable

      - name: Run deno test
        if: matrix.os == 'ubuntu-latest'
        run: |
          # https://github.com/denoland/deno/blob/1848c7e361f1a3a33487b60ab6fcb61ed1f62273/.github/workflows/ci.yml#L155
          sudo apt remove --purge -y man-db
          sudo apt update
          sudo apt install build-essential git autoconf libtool libssl-dev -y
          pushd /tmp
          git clone https://github.com/libssh2/libssh2.git libssh2
          cd libssh2
          git checkout libssh2-1.10.0
          autoreconf -vfi
          ./configure 
          make
          make check
          sudo make install
          popd

          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib

          deno test --allow-ffi --unstable

      - name: Run deno test
        if: matrix.os == 'windows-latest'
        run: |
          # https://jpassing.com/2021/02/29/2021-03-29-building-libssh2-on-windows-lessons-learnt/
          git clone https://github.com/libssh2/libssh2.git
          cd libssh2
          git checkout libssh2-1.10.0

          mkdir dll
          cmake -DCRYPTO_BACKEND=WinCNG -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=./dll --build .
          cmake --build . --target install

          dir dll
          $Env:PATH += "./dll"
          deno test --allow-ffi --unstable

